#!/usr/bin/perl
use strict;
use warnings;
use LWP::UserAgent;
use Getopt::Long;
use HTTP::Request::Common qw/GET POST DELETE/;
use JSON::XS 'encode_json';

my $zone;
my $id;
my $email;
my $offset;
my $target;
my $delete;
my $confirm;
my $server_base = 'http://recollect.net';
GetOptions(
    'z|zone=s'     => \$zone,
    'i|id=s'       => \$id,
    'e|email=s'    => \$email,
    'o|offset=s'   => \$offset,
    't|target=s'   => \$target,
    'delete'       => \$delete,
    'confirm'      => \$confirm,
    'server=s'     => \$server_base,
) or usage();

my $uri = "$server_base/api/subscriptions";
my $ua = LWP::UserAgent->new;

if ($delete) {
    usage() unless $zone and $id;
    delete_reminder();
}
else {
    usage() unless $zone and $email;
    add_reminder();
}
exit;

sub delete_reminder {
    my $req = HTTP::Request->new('DELETE', $uri);
    my $resp = $ua->request($req);
    print $resp->status_line, "\n";
}

sub add_reminder {
    die "target is required for add" unless $target;
    my $resp = $ua->request(POST $uri,
        'Content-Type' => 'application/json',
        'Content'      => encode_json(
            {
                email     => $email,
                reminders => [
                    {
                        target => $target,
                        (defined $offset ? (delivery_offset => $offset) : ()),
                        zone_id => $zone,
                    },
                ],
            }
        )
    );
    print $resp->status_line, "\n";
    print $resp->headers->header('Location'), "\n";
    print $server_base, $resp->content, "\n";
}


sub usage {
    die <<EOT
USAGE: $0 <options>

Creating a reminder:
   $0 --email your\@email --zone your-zone 
      --offset 7 --target 'twitter:user'

Confirming a reminder:
   $0 --confirm --id confirm_hash --zone zone

Deleting a reminder:
   $0 --delete --id id_to_delete --zone zone

Other:
  --server http://your-server
EOT
}
